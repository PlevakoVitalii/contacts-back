// Якщо кожний роут ми виносимо в окркмий файл то і іморт необхідних
// елементів маємо робити в кожному файлі(це мінус рознесення роутів)

const { Contact } = require('../../models/contact')

const getAll = async (req, res, next) => {
  try {
    // Т.я. ми добавляємо ще owner(власник), до візьмемо ми його з мідлвари authenticate
    // яка залежно від токена(юзера) яки залогінений на фронті в req кладе дані цього юзера
    // потім id юзера використаємо як параметр пдля пошуку продуктів тільки цього юзера
    const { _id } = req.user
    // дістаємо із запиту параметри запиту, а саме кількість сторінок та контактів
    // і передаємо їх в параметри звернення до бази, де skip вказує скільки позицій треба  пропустити,
    // а +limit вказує яку кількість товарів повернути. "+" - для перетворення limit в число, так як в GET запиті limit - стрічка
    const { page = 2, limit = 10, favorite } = req.query;
    // розрахунок скільки контактів пропустити в базі, після яких почати повертати, де limit показує кількість на кожній сторінці
    const skip = (page - 1) * limit;
    // В методі Mongoose find() в параметри  можемо задати поля я хочемо щоб бекенд віддав на фронт, або через "-" НЕ віддав
    // в випадках коли деякі поля зайві   
    const result = await Contact
      .find({ owner: _id, ...favorite !== undefined ? { favorite: req.query.favorite } : {} },
        "-createdAt -updatedAt",
        { skip, limit: +limit }
      )
      .populate("owner", "email");
    res.json(result)
  } catch (error) {
    next(error)
  }
};

module.exports = getAll;